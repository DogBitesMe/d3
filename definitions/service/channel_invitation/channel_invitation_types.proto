package bnet.protocol.channel_invitation;

import "lib/protocol/invitation.proto";
import "lib/protocol/entity.proto";
import "service/channel/channel_types.proto";

message Invitation {
	required .bnet.protocol.channel.ChannelDescription channel_description = 1;
	optional bool reserved = 2 [default = false];
	optional bool rejoin = 3 [default = false];
	optional uint32 service_type = 4;
}

message SendInvitationRequest {
	optional .bnet.protocol.EntityId channel_id = 1;
	optional bool reserved = 2;
	optional bool rejoin = 3;
	optional uint32 service_type = 4;
}

message InvitationCollection {
	optional uint32 service_type = 1;
	optional uint32 max_received_invitations = 2;
	optional uint64 object_id = 3;
	repeated .bnet.protocol.invitation.Invitation received_invitation = 4;
}

